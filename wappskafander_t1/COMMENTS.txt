===========================================================================
=========================  wappskafander_t1  ==============================
===========================================================================

The name, "wappskafander_t1" is a made up word that is derived from
"web application", "skafander", "type 1", where the "skafander"
stands for "space suit" in Estonian.

The wappskafander_t1 is a tool for publishing Java servlet based
web applications as end-user-executable stand-alone applications.

---------------------------------------------------------------------------
                       Administrator Perspective
---------------------------------------------------------------------------

The idea is that the end user or network administrator writes,
or looks up, only a port number and executes
start<the_rest_of_the_script_name> and the servlet based
web application runs on the local machine without
any need for doing any further installation or configuration.

The wappskafander_t1 contains everything that is needed for
running a Java servlet: copy of Java Runtime Environment,
a server that wraps Java servlets, etc.

The current version is supported only on 32 bit i686 compatible
Linux distributions and it has been tested only on Ubuntu.

If 64 bit Linux supports 32 bit Linux applications, then it
will probably run on the 64 bit Linux, but there might be problems
on other 32 bit Debian Linux based distributions (e.g. Ubuntu),
because different distributions are compiled with different
versions of GCC and that might introduce binary incompatibilities.

To start the server, one has to look up or change the port number in
    ./src/etc/server_configuration.bash

and execute a platform/operating-system specific startup script
from the

    ./src/bin

or from one of the ./src/bin sub-folders.

The
    ./src/bonnet/

contains only the wappskafander_t1 implementation and
it does not contain anything that a web application developer
or administrator should know about or edit or configure.


---------------------------------------------------------------------------
               Web Application Developer Perspective
---------------------------------------------------------------------------

General idea behind the architecture is that the

    ./src/web_root/index.html

serves the web browser side of the application and the
JavaScript based application communicates with the Java Servlet
based server side by using AJAX style HTTP requests.

If there exists a file
    ./src/web_root/crazy.war

and the
    ./src/web_root/index.html

is available from
    http://localhost:20040/

then the
    ./src/web_root/crazy.war

is accessible from
    http://localhost:20040/crazy/

There can be more than one WAR file in the
    ./src/web_root/

Another place, where the server startup sequence
looks for WAR files, is
    ./src/web_root/servlet_projects_in_maven_format/<project name>/target

The
    ./src/web_root/servlet_projects_in_maven_format/

can contain more than one WAR project and the WAR project templates
can be generated by
    /bin/bash ./src/web_root/servlet_projects_in_maven_format/COMMENTS_about_wappskafander_t1.txt

The server startup scripts will abort, if WAR files in the
    ./src/web_root/servlet_projects_in_maven_format/

sub-folders and the
    ./src/web_root/

have a collision. Collisions that appear while the
servlet container server is running, are not handled
and will result an unspecified behavior.

---------------------------------------------------------------------------
              Similar Software from Around the World
---------------------------------------------------------------------------

x) Proprietary. License price as of 2013.02: 2835â‚¬.
   http://wrapper.tanukisoftware.com/


===========================================================================
